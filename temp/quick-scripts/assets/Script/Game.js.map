{"version":3,"sources":["Game.js"],"names":["createKnifePlayer","createLayoutKnife","angleKnife","loseGame","nextLevel","finishLevel","settingMS","Emitter","require","knifePrefab","knifeOriginal","knifeArr","node","knifeNode","cc","instantiate","setPosition","position","addChild","v2","push","number","knifeMini","layoutKnife","i","knifeLayout","y","boardNode","boardRotation","angle","rad","Math","PI","r","width","x","cos","sin","audio","knife","score","level","audioEngine","play","runAction","sequence","spawn","rotateBy","moveTo","callFunc","director","loadScene","instance","emit","getCompo","getScene","getChildByName","getComponent","setScore","setLevel","setTimeout","getScore","children","onMS","offMS","toggleMS","active","tween","to","call","start"],"mappings":"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","file":"Game.js","sourceRoot":"../../../../assets/Script","sourcesContent":["import exp from 'constants';\n\nconst Emitter = require('Emitter');\n\nexport function createKnifePlayer(knifePrefab, knifeOriginal, knifeArr, node) {\n    let knifeNode = cc.instantiate(knifePrefab);\n    knifeNode.setPosition(knifeOriginal.position);\n    node.addChild(knifeNode);\n    knifeOriginal.setPosition(cc.v2(0, -450));\n    knifeArr.push(knifeNode);\n}\n\nexport function createLayoutKnife(number, knifeMini, layoutKnife) {\n    for (let i = 1; i < number; i++) {\n        let knifeLayout = cc.instantiate(knifeMini);\n        knifeLayout.y -= i * 50;\n        layoutKnife.node.addChild(knifeLayout);\n    }\n}\n\nexport function angleKnife(boardNode, boardRotation, knifeArr) {\n    boardNode.angle = (boardNode.angle + boardRotation) % 360;\n    for (let knifeNode of knifeArr) {\n        knifeNode.angle = (knifeNode.angle + boardRotation) % 360;\n        let rad = Math.PI * (knifeNode.angle - 90) / 180;\n        let r = boardNode.width / 2;\n        knifeNode.x = boardNode.x + r * Math.cos(rad);\n        knifeNode.y = boardNode.y + r * Math.sin(rad);\n    }\n}\n\n\nexport function loseGame(audio, knife, score, level) {\n    cc.audioEngine.play(audio, false, 2);\n    knife.runAction(cc.sequence(\n        cc.spawn(\n            cc.rotateBy(0.1, 720),\n            cc.moveTo(0.1, cc.v2(knife.x, -800))\n        ),\n        cc.callFunc(() => {\n            cc.director.loadScene('Home', () => {\n                Emitter.instance.emit('transformScreen', 'gameOver');\n                let getCompo = cc.director.getScene().getChildByName('Canvas').getChildByName('GameOverNode').getComponent('GameOver');\n                getCompo.setScore(score);\n                getCompo.setLevel(level);\n            });\n        })\n    )\n    );\n}\n\nexport function nextLevel(level, score) {\n    setTimeout(() => {\n        cc.director.loadScene(\"Level \" + (level + 1), () => {\n            let getScore = cc.director.getScene().getChildByName('Canvas').children[1].children[0].getComponent(\"Level\" + (level + 1));\n            getScore.setScore(score);\n        });\n    }, 1000);\n}\n\nexport function finishLevel(level, score) {\n    cc.director.loadScene('Home', () => {\n        Emitter.instance.emit('transformScreen', 'gameOver');\n        let getCompo = cc.director.getScene().getChildByName('Canvas').getChildByName('GameOverNode').getComponent('GameOver');\n        getCompo.setScore(score);\n        getCompo.setLevel(level);\n    });\n}\n\nexport function settingMS(onMS, offMS, toggleMS) {\n    if (onMS.node.active) {\n        cc.tween(toggleMS)\n            .to(0.3, { position: cc.v2(55, 0) })\n            .call(() => {\n                onMS.node.active = false;\n                offMS.node.active = true;\n            })\n            .start();\n    }\n    else {\n        cc.tween(toggleMS)\n            .to(0.3, { position: cc.v2(-66, 0) })\n            .call(() => {\n                onMS.node.active = true;\n                offMS.node.active = false;\n            })\n            .start();\n    }\n}"]}