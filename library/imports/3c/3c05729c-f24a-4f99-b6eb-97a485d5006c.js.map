{"version":3,"sources":["../../../../assets/Script/assets/Script/GameOver.js"],"names":["Emitter","require","game","cc","Class","extends","Component","properties","restart","Button","home","rank","record","Node","scoreEndGame","Label","levelEndGame","addButton","fillName","EditBox","arrRecord","score","level","onLoad","node","active","sys","localStorage","getItem","JSON","parse","on","replayGame","bind","goToHome","goToRank","onAddName","setScore","value","setLevel","director","loadScene","arrNameScore","name","string","push","sortArrRecord","setItem","stringify","dataLocal","map","item","instance","emit","i","length","anyArr","j","start","update","dt"],"mappings":"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","file":"GameOver.js","sourceRoot":"../../../../assets/Script","sourcesContent":["const Emitter = require('Emitter');\nconst game = require('Game');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        restart: cc.Button,\n        home: cc.Button,\n        rank: cc.Button,\n        record: cc.Node,\n        scoreEndGame: cc.Label,\n        levelEndGame: cc.Label,\n        addButton: cc.Button,\n        fillName: cc.EditBox,\n        arrRecord: [],\n        score: 0,\n        level: 0,\n    },\n\n    onLoad() {\n        this.restart.node.active = false;\n        this.rank.node.active = false;\n        this.record.active = false;\n        let rank = cc.sys.localStorage.getItem('TopTen');\n        this.arrRecord = JSON.parse(rank);\n        this.restart.node.on('click', this.replayGame.bind(this));\n        this.home.node.on('click', this.goToHome.bind(this));\n        this.rank.node.on('click', this.goToRank.bind(this));\n        this.addButton.node.on('click', this.onAddName.bind(this));\n    },\n\n    setScore(value) {\n        this.score = value;\n    },\n\n    setLevel(value) {\n        this.level = value;\n    },\n\n    replayGame() {\n        cc.director.loadScene('Level 1');\n    },\n\n    onAddName() {\n        this.restart.node.active = true;\n        this.rank.node.active = true;\n        this.record.active = true;\n        this.fillName.node.active = false;\n        let arrNameScore = {\n            name: '',\n            score: 0,\n        }\n        if(this.fillName.string === \"\"){\n            arrNameScore.name = \"NoName\";\n        }\n        else {\n            arrNameScore.name = this.fillName.string;\n        }\n        arrNameScore.score = this.score;\n        if (typeof (this.arrRecord) == 'undefined' || this.arrRecord == null) {\n            this.arrRecord = [];\n        }\n        this.arrRecord.push(arrNameScore);\n        this.sortArrRecord(this.arrRecord);\n        cc.sys.localStorage.setItem('TopTen', JSON.stringify(this.arrRecord));\n        var dataLocal = JSON.parse(cc.sys.localStorage.getItem('TopTen'));\n        dataLocal.map((item) => {\n            Emitter.instance.emit('addMasterName', item.name, item.score);\n        })\n    },\n\n    goToHome() {\n        for (let i = 0; i < this.arrRecord.length - 1; i++) {\n            if (i < 10) {\n                Emitter.instance.emit('getAndAdd', this.arrRecord[i].name, this.arrRecord[i].score);\n            }\n        };\n        Emitter.instance.emit('transformScreen', 'home');\n    },\n\n    goToRank() {\n        Emitter.instance.emit('transformScreen', 'ranking');\n    },\n\n    sortArrRecord(anyArr) {\n        for (let i = 0; i < anyArr.length; i++) {\n            for (let j = i + 1; j < anyArr.length; j++) {\n                if (anyArr[i].score < anyArr[j].score) {\n                    [anyArr[i], anyArr[j]] = [anyArr[j], anyArr[i]];\n                }\n            }\n        }\n    },\n\n    start() {\n        this.scoreEndGame.string = this.score;\n        this.levelEndGame.string = \"Level \" + this.level;\n    },\n\n    update(dt) {\n        \n    },\n});"]}